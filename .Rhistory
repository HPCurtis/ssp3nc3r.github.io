opts_tooltip(
css = str_c(
'background-color:white;',
'color:black;',
'font-size:8pt;',
'padding:10px;'
),
offx = 10,
offy = 10
)
)
)
blogdown:::serve_site()
knitr::kable(elements)
names(elements)
class(elements)
type(elements)
sapply(elements, class)
flextable(sapply(elements, class))
flextable(sapply(elements, class) %>% data.frame)
cbind(names(elements), sapply(elements, class)) %>% data.frame
cbind(names(elements), sapply(elements, class)) %>% data.frame %>% flextable()
cbind(names(elements), sapply(elements, class)) %>%
data.frame %>%
flextable(col_keys = c('P', 'V')) %>%
set_header_labels( X1 = 'Variable', X2 = 'Type' )
cbind(names(elements), sapply(elements, class)) %>%
data.frame %>%
flextable(col_keys = c('X1', 'X2')) %>%
set_header_labels( X1 = 'Variable', X2 = 'Type' )
blogdown:::serve_site()
flextable::color()
?flextable::color
knitr::opts_chunk$set(
echo = TRUE,
message = FALSE,
warning = FALSE,
cache = FALSE,
eval = TRUE)
cbind(names(elements), sapply(elements, class)) %>%
data.frame %>%
flextable(col_keys = c('X1', 'X2')) %>%
set_header_labels( X1 = 'Variable', X2 = 'Type' ) %>%
color(color = '#555555', part = 'all')
blogdown::check_config()
blogdown:::update_meta_addin()
blogdown:::serve_site()
?blogdown::build_site
?blogdown::build_site(build_rmd = TRUE)
blogdown::build_site(build_rmd = TRUE)
blogdown::build_site()
blogdown::build_site()
blogdown::build_site()
knitr::opts_chunk$set(
echo = TRUE,
message = FALSE,
warning = FALSE,
cache = FALSE,
eval = TRUE)
library(tidyverse)
library(flextable)
library(ggiraph)
data(list = 'elements', package = 'rbokeh')
element_type <- c(
"alkali metal", "alkaline earth metal", "halogen", "metal",
"metalloid", "noble gas", "nonmetal", "transition metal")
element_color <- c(
"#a6cee3", "#1f78b4", "#fdbf6f", "#b2df8a",
"#33a02c", "#bbbb88", "#baa2a6", "#e08e79")
elements <-
elements %>%
filter( !is.na(group) ) %>%
mutate(
across(.cols = group:atomic.mass, as.character),
atomic.mass = if_else(symbol == "Uus", " ", atomic.mass),
color = element_color[match(metal, element_type)],
type = metal
)
cbind(names(elements), sapply(elements, class)) %>%
data.frame %>%
flextable(col_keys = c('X1', 'X2')) %>%
set_header_labels( X1 = 'Variable', X2 = 'Type' ) %>%
color(color = '#777777', part = 'all')
tooltip_table <- function(...) {
data.frame(...) %>%
mutate( across(.cols = everything(), as.character) ) %>%
pivot_longer(cols = everything(), names_to = 'P', values_to = 'V') %>%
flextable(col_keys = c('P', 'V')) %>%
set_header_labels( P = '', V = '' ) %>%
fontsize(size = 8, part = 'all') %>%
line_spacing(space = 5, unit = 'mm', part = 'all') %>%
set_table_properties(layout = 'autofit') %>%
theme_alafoli() %>%
htmltools_value(ft.shadow = FALSE) %>%
as.character()
}
elements <-
elements %>%
rowwise() %>%
mutate(tooltip = tooltip_table(
name, type, atomic.mass, density, electronic.configuration,
boiling.point, melting.point, bonding.type)
) %>%
ungroup()
p <-
elements %>%
ggplot(
mapping = aes(group, period)
) +
theme_void() +
coord_equal() +
scale_x_discrete(limits = factor(1:18) ) +
scale_y_discrete(limits = factor(7:1) ) +
scale_fill_identity() +
# base color of each element square
geom_tile(
mapping = aes(
fill = color,
),
alpha = 0.6,
width = 1,
height = 1,
color = '#ffffff',
lwd = 0.3
) +
# add symbol to each square
geom_text_interactive(
mapping = aes(
label = symbol,
data_id = atomic.number
),
size = 7/.pt,
hjust = 0,
vjust = 0.5,
nudge_x = -0.4,
nudge_y = 0.04,
fontface = 'bold'
) +
# add atomic number to each square
geom_text_interactive(
mapping = aes(
label = atomic.number,
data_id = atomic.number
),
size = 4/.pt,
hjust = 0,
vjust = 0.5,
nudge_x = -0.4,
nudge_y = 0.35
) +
# add name to each square
geom_text_interactive(
mapping = aes(
label = name,
data_id = atomic.number
),
size = 3/.pt,
hjust = 0,
vjust = 0.5,
nudge_x = -0.4,
nudge_y = -0.2
) +
# add atomic mass to each square
geom_text_interactive(
mapping = aes(
label = atomic.mass,
data_id = atomic.number
),
size = 3/.pt,
hjust = 0,
vjust = 0.5,
nudge_x = -0.4,
nudge_y = -0.35
) +
# for mouseover, set alpha very low
geom_tile_interactive(
mapping = aes(
fill = color,
data_id = atomic.number,
tooltip = tooltip
),
alpha = 0.01,
width = 1,
height = 1,
color = '#ffffff',
lwd = 0.3
)
girafe(
ggobj = p,
options = list(
opts_hover(
css = 'fill-width:3;'),
opts_hover_inv(
css = 'fill-opacity:0.2;'),
opts_tooltip(
css = str_c(
'background-color:white;',
'color:black;',
'font-size:8pt;',
'padding:10px;'
),
offx = 10,
offy = 10
)
)
)
?theme_alafoli
get_flextable_defaults()
girafe(
ggobj = p,
options = list(
opts_hover(
css = 'fill-width:3;'),
opts_hover_inv(
css = 'fill-opacity:0.2;'),
opts_tooltip(
css = str_c(
'background-color:white;',
'color:black;',
'font:Helvetica',
'font-size:8pt;',
'padding:10px;'
),
offx = 10,
offy = 10
)
)
)
install.packages(c("bench", "brio", "cpp11", "credentials", "devtools", "fs", "ggdist", "glue", "gmailr", "pkgbuild", "pkgload", "readr", "remotes", "stringi", "vroom", "withr", "xml2"))
blogdown:::serve_site()
blogdown:::serve_site()
blogdown:::serve_site()
library(knitr)
opts_chunk$set(
echo = FALSE,
message = FALSE,
warning = FALSE,
error = FALSE
)
library(tidyverse)
library(lubridate)
library(ggthemes)
library(cmdstanr)
library(bayesplot)
library(posterior)
library(flextable)
register_knitr_engine(override = FALSE)
d <- readRDS('../../../data/arrs_records.rds')
d_5k <-
d %>% filter(distance == 5, type == 'road', sex == 'male', age >= 40) %>%
mutate(
k = age,
rk = (runtime_sec / 60),
rk_log = log(rk)
) %>%
select(k, rk, rk_log)
dat   <- as.list(d_5k)
dat$N <- length(dat$k)
summarise_bar <- function(data, max_distinct = 10) {
if( max(as.integer(data$value), na.rm = TRUE) <= max_distinct ) {
ggplot(data, mapping = aes(value)) +
geom_bar() +
theme_void()
} else {
ggplot(data, mapping = aes(value)) +
theme_void()
}
}
make_spark <- function(data, max_distinct = 10) {
if( max(as.integer(data$value), na.rm = TRUE) <= max_distinct ) {
if(is.numeric(data$value)) {
ggplot(data, mapping = aes(value)) +
geom_density() +
theme_void()
} else {
ggplot(data, mapping = aes(value)) +
geom_bar() +
theme_void()
}
} else {
ggplot(data, mapping = aes(value)) +
theme_void()
}
}
summarise_tibble <- function(d, desc_len = 10) {
# summarise strings and factors
d_char <- d %>%
mutate_if(is.character, as.factor) %>%
select(where(is.factor)) %>%
mutate_all(as.character) %>%
pivot_longer(cols = everything(), names_to = "Variable") %>%
group_by(Variable) %>%
summarise(
Type = "String/Factor",
Min = min(value, na.rm = TRUE),
gg = list(
make_spark( data.frame(value), 40000 )
),
Max = max(value, na.rm = TRUE),
Distinct = n_distinct(value)
) %>%
ungroup() %>%
mutate_if(is.numeric, as.character)
# summarise date
d_dates <-
d %>%
select(where(is.Date)) %>%
pivot_longer(cols = everything(), names_to = "Variable") %>%
group_by(Variable) %>%
summarise(
Type = "Date",
Min = round(min(value, na.rm = TRUE), digits = 2),
gg = list(
make_spark( data.frame(value), 40000 )
),
Max = round(max(value, na.rm = TRUE), digits = 2),
Distinct = n_distinct(value)
) %>%
ungroup() %>%
mutate_if(is.Date, as.character) %>%
mutate_if(is.numeric, as.character)
# summarise numeric, integer
d_num <- d %>%
select(where(is.numeric)) %>%
pivot_longer(cols = everything(), names_to = "Variable") %>%
group_by(Variable) %>%
summarise(
Type = "Numeric",
Min = round(min(value, na.rm = TRUE), digits = 2),
gg = list(
make_spark( data.frame(value), 40000 )
),
Max = round(max(value, na.rm = TRUE), digits = 2),
Distinct = n_distinct(value)
) %>%
ungroup() %>%
mutate_if(is.numeric, as.character)
# combine types
d_ <- bind_rows(d_char, d_dates, d_num) %>%
rowwise() %>%
mutate(
Min = ifelse(nchar(Min) <= desc_len,
Min,
str_c(substr(Min, 1, desc_len), "...") ),
Max = ifelse(nchar(Max) <= desc_len,
Max,
str_c(substr(Max, 1, desc_len), "...") )
)
# table it
d_ %>%
flextable(
col_keys = c("Variable", "Type", "Min", "Histogram", "Max", "Distinct"),
cwidth = 0
) %>%
mk_par(
j = "Histogram",
value = as_paragraph(
gg_chunk(value = gg)
)
) %>%
set_header_labels(
Histogram = "Distribution"
) %>%
theme_booktabs() %>%
align(j = "Min", align = "right", part = "all")
}
summarise_tibble(d)
ggplot(d) +
theme_clean() +
geom_point(
mapping = aes(
x = age,
y = runtime_sec / 60 / 60
),
size = 0.2,
alpha = 0.5
) +
geom_line(
mapping = aes(
x = age,
y = runtime_sec / 60 / 60,
group = interaction(sex, distance, units),
color = sex),
lwd = 0.3
) +
scale_x_continuous(name = 'Runner age', breaks = seq(10, 100, by = 20)) +
scale_y_continuous(name = 'Record time, hours') +
scale_color_manual(
guide = 'none',
breaks = c('female', 'male'),
values = c('hotpink3', 'steelblue')
) +
facet_wrap(~interaction(distance, units, sep = ' '), scales = 'free')
ggplot(d) +
theme_clean() +
geom_point(
mapping = aes(
x = age,
y = log(runtime_sec / 60)
),
size = 0.2,
alpha = 0.5
) +
geom_line(
mapping = aes(
x = age,
y = log(runtime_sec / 60),
group = interaction(sex, distance, units),
color = sex),
lwd = 0.3
) +
scale_x_continuous(name = 'Runner age', breaks = seq(10, 100, by = 20)) +
scale_y_continuous(name = 'Log of record time, minutes') +
scale_color_manual(
guide = 'none',
breaks = c('female', 'male'),
values = c('hotpink3', 'steelblue')
) +
facet_wrap(~interaction(distance, units, sep = ' '), scales = 'free')
dat <-
d_5k %>%
filter(
sapply(seq(n()), function(i) rk[i] < min(rk[(i+1):n()]))
) %>%
as.list()
dat$N <- length(dat$k)
dat$rk_log <- log(dat$rk)
dat$k <- dat$k
fit_lq <- lq$sample(
data = dat,
parallel_chains = 4,
chains = 4,
refresh = 0,
max_treedepth = 10,
adapt_delta = 0.8,
show_messages = FALSE
)
post <- fit_lq$draws(variables = "rk_log_hat", format = "draws_matrix")
ppc_ribbon(exp(dat$rk_log), exp(post)) +
scale_y_continuous(
name = "5K time (minutes)",
breaks = seq(5, 100, by = 5)
) +
scale_x_continuous(
name = "Runner age at record",
breaks = seq(dat$k),
labels = floor(dat$k)) +
theme(legend.position = "")
post <- fit_lq$draws(variables = "k_star", format = "draws_df")
ggplot(post) +
ggthemes::theme_tufte(base_family = 'sans', base_size = 14) +
coord_cartesian(xlim = c(50, 90)) +
geom_density(aes(k_star), outline.type = 'both', fill = "lightblue", alpha = 0.6) +
stat_function(
fun = dnorm,
args = c(mean = 70, sd = 10),
xlim = c(50, 90),
geom = 'density',
lwd = 1
) +
annotate('text', x = 69.5, y = 0.06, label = 'Posterior', fontface = "bold") +
annotate('text', x = 80, y = 0.03, label = 'Prior', fontface = "bold") +
scale_x_continuous(
name = "Estimate where age-over-age change in record times accelerates (k_star)",
breaks = seq(50, 80, by = 10)) +
scale_y_continuous(name = "", breaks = NULL)
fit_np <- np$sample(
data = dat,
parallel_chains = 4,
chains = 4,
refresh = 0,
max_treedepth = 10,
adapt_delta = 0.99,
show_messages = FALSE
)
post <- fit_np$draws(variables = "rk_hat", format = "draws_matrix")
ppc_ribbon(dat$rk, post) +
scale_y_continuous(
name = "5K time (minutes)",
breaks = seq(5, 100, by = 5)
) +
scale_x_continuous(
name = "Runner age at record",
breaks = seq(dat$k),
labels = floor(dat$k)) +
theme(legend.position = "")
post <- fit_np$draws(variables = "b_", format = "draws_matrix")
p <-
ggplot() +
ggthemes::theme_tufte(base_family = 'sans') +
geom_hline(yintercept = 1) +
coord_cartesian(ylim = c(0.9, 1)) +
scale_y_continuous(
name = "Biological limit b_k as percent of record time",
breaks = seq(0.9, 1, by = 0.025)
) +
scale_x_continuous(
name = "Runner's age when setting record",
breaks = seq(from = 40, to = 90, by = 10),
labels = seq(from = 40, to = 90, by = 10)
)
for(i in 1:200) {
p <- p + geom_line(
data = data.frame(y = as.vector(post[i,])),
mapping = aes(dat$k, y), color = "steelblue", alpha = 0.1)
}
p
blogdown:::preview_site()
blogdown:::new_post_addin()
blogdown:::new_post_addin()
blogdown:::preview_site()
blogdown:::serve_site()
