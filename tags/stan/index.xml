<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Stan on p( ssp3nc3r | Columbian )</title>
    <link>https://ssp3nc3r.github.io/tags/stan/</link>
    <description>Recent content in Stan on p( ssp3nc3r | Columbian )</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en</language>
    <lastBuildDate>Mon, 17 Jun 2024 00:00:00 +0000</lastBuildDate>
    <atom:link href="https://ssp3nc3r.github.io/tags/stan/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>New online Stan coding course</title>
      <link>https://ssp3nc3r.github.io/post/new-online-stan-coding-course/</link>
      <pubDate>Mon, 17 Jun 2024 00:00:00 +0000</pubDate>
      <guid>https://ssp3nc3r.github.io/post/new-online-stan-coding-course/</guid>
      <description>Hey everyone! I’m excited to announce my new online course for learning direct Stan coding for Bayesian analysis. Available starting this Friday; enroll here: https://athlyticz.com/stan-i.
— TL;DR —
Actual Stan coding, not a high-level interface At-your-own-pace videos: shows live coding while explaining Hosted RStudio session to practice alongside me Starts with fundamentals, builds to hierarchical models Emphasizes a Bayesian workflow Modeling applied to sports data My goal is to make learning Stan as easy as possible.</description>
    </item>
    <item>
      <title>Speedy splines part two, derivative work</title>
      <link>https://ssp3nc3r.github.io/post/derivative-work-on-speedy-splines/</link>
      <pubDate>Thu, 31 Aug 2023 00:00:00 +0000</pubDate>
      <guid>https://ssp3nc3r.github.io/post/derivative-work-on-speedy-splines/</guid>
      <description>In the last post, I showed how we can speed up computation for splines in Stan. This post is, ahem, derivative. Perhaps we have noisy data of position and time, and we want to estimate speed and acceleration. We can use b-splines and their derivatives for this.
So let’s pick up where we left off, and add calculations in Stan to calculate the first and second derivatives of the spline in Stan.</description>
    </item>
    <item>
      <title>Speedy splines in Stan part one</title>
      <link>https://ssp3nc3r.github.io/post/speedy-splines-in-stan/</link>
      <pubDate>Wed, 16 Aug 2023 00:00:00 +0000</pubDate>
      <guid>https://ssp3nc3r.github.io/post/speedy-splines-in-stan/</guid>
      <description>Milad Kharratzadeh provides a helpful case study on estimating splines in Stan. We can improve on his work with a few tricks to speed up the estimation process. Namely, if we decompose the spline matrix using QR decomposition, we speed up Stan’s fitting process by at least an order of magnitude.
Here’s how we can alter the code to accommodate splines with a few tricks to speed things up:</description>
    </item>
    <item>
      <title>Generating random numbers from custom distributions</title>
      <link>https://ssp3nc3r.github.io/post/generating-random-numbers-from-custom-distributions/</link>
      <pubDate>Fri, 05 Nov 2021 00:00:00 +0000</pubDate>
      <guid>https://ssp3nc3r.github.io/post/generating-random-numbers-from-custom-distributions/</guid>
      <description>In an earlier post, I explained how to code custom distributions for use in modeling using the programming language Stan. Expanding upon that post, here, I’ll demonstrate how we code a function to generate random values from those distributions.
One direct approach just involves a bit of algebra. As in the earlier post, I’ll again use the three-parameter Weibull distribution. Generally, in the first step, we can set the CDF of the distribution equal to a random value from, say, a uniform distribution \(u \in [0, 1]\), like so:</description>
    </item>
    <item>
      <title>Coding custom distribution functions in Stan</title>
      <link>https://ssp3nc3r.github.io/post/coding-custom-distribution-functions-in-stan/</link>
      <pubDate>Thu, 18 Feb 2021 00:00:00 +0000</pubDate>
      <guid>https://ssp3nc3r.github.io/post/coding-custom-distribution-functions-in-stan/</guid>
      <description>The probabilistic programming language called Stan is a powerful tools for modeling. It includes numerous distribution functions we can use to model. While it cannot include every conceivable distribution in its available functions, it does enable the next best thing: we can code our own!
The Stan library does not, for example, currently include the three-parameter Weibull distribution. In this tutorial, I’ll code its PDF and CDF to demonstrate coding custom distributions in Stan.</description>
    </item>
    <item>
      <title>Exploratory modeling on how win uncertainty affects baseball game attendance</title>
      <link>https://ssp3nc3r.github.io/post/2020-01-03-exploratory-modeling-on-how-win-uncertainty-affects-game-attendance/</link>
      <pubDate>Fri, 03 Jan 2020 18:01:28 -0400</pubDate>
      <guid>https://ssp3nc3r.github.io/post/2020-01-03-exploratory-modeling-on-how-win-uncertainty-affects-game-attendance/</guid>
      <description>We dread an empty ticket booth. The Dodgers’ average game attendance, for example, can be below capacity — they have seats to fill, despite having winning seasons.
To draw more fans, consider the words of famed economist Simon Rotternberg, who said “uncertainty of outcome is necessary for consumers to pay admission to ball games.” While winning is important, it’s the not knowing that creates excitement. Have the Dodgers maximized winning with uncertainty of outcome?</description>
    </item>
    <item>
      <title>Dynamic, physics-informed systems in Bayesian models</title>
      <link>https://ssp3nc3r.github.io/post/dynamic-systems-in-bayesian-models/</link>
      <pubDate>Thu, 31 Oct 2019 00:00:00 +0000</pubDate>
      <guid>https://ssp3nc3r.github.io/post/dynamic-systems-in-bayesian-models/</guid>
      <description>By dynamic systems, I mean using differential equations to describe how data changes over time. Take running speed, for example. Several physics-based models of running speed have been developed, which I’ve previously discussed. The primary goal in those previous discussions involving sprint speed have been in estimating a maximum speed. But the underlying structure of these models estimate change in speed at time two from speed at time one: a differential equation.</description>
    </item>
    <item>
      <title>Estimating human limits of running speed</title>
      <link>https://ssp3nc3r.github.io/post/estimating-human-limits-to-running-speed/</link>
      <pubDate>Thu, 10 Oct 2019 00:00:00 +0000</pubDate>
      <guid>https://ssp3nc3r.github.io/post/estimating-human-limits-to-running-speed/</guid>
      <description>Prefontaine “finally got it through my head that the real purpose of running isn’t to win a race. It’s to test the limits of the human heart. And that he did. Nobody did it more often. Nobody did it better.”
— Bill Bowerman.
We’ve been recording progress towards those limits, whatever they are, for some time. World records have been collected for running distances, from 50 meters on an indoor track to marathons and beyond.</description>
    </item>
    <item>
      <title>See the rising sea</title>
      <link>https://ssp3nc3r.github.io/post/see-the-rising-sea/</link>
      <pubDate>Fri, 02 Aug 2019 00:00:00 +0000</pubDate>
      <guid>https://ssp3nc3r.github.io/post/see-the-rising-sea/</guid>
      <description>Responding to the global effects of climate change — whether by mitigation or adaptation — requires that we, as humans, collectively change how we live. In many ways, how we live is governed by what policies we, or whomever made those policies, decided. Perhaps an effective way in some societies to enact change for the common good is, sadly, for those in power — e.g., those wealthy — to internalize future effects.</description>
    </item>
    <item>
      <title>Modeling forces in 100m Olympic sprint, a study in physics and probability</title>
      <link>https://ssp3nc3r.github.io/post/estimating-force-of-100m-olympic-sprint-with-physics/</link>
      <pubDate>Tue, 11 Jun 2019 00:00:00 +0000</pubDate>
      <guid>https://ssp3nc3r.github.io/post/estimating-force-of-100m-olympic-sprint-with-physics/</guid>
      <description>Let’s practice expressing a probabilistic model aided by physics. Physics have been used, of course, to mathematically describe the forces involved in running short distances. To estimate sprint speed we can inform our models with basic anatomical information and physics. The mathematical physics of running speed depend on body weight, and stride length and rate. Let’s begin with those.
Let’s start with physics equations to describe speed, and accelerating to maximum speed.</description>
    </item>
    <item>
      <title>Estimating the marginal value of baseball events</title>
      <link>https://ssp3nc3r.github.io/post/estimating-the-marginal-value-of-baseball-events/</link>
      <pubDate>Sat, 08 Dec 2018 00:00:00 +0000</pubDate>
      <guid>https://ssp3nc3r.github.io/post/estimating-the-marginal-value-of-baseball-events/</guid>
      <description>Teams score — or don’t — event by event. Events change the state of the game. Solo home runs aside, whether a score results from any event depends upon prior events: a batter’s double only “drives in a score” when an earlier batter made it on base. By the collection of events a player generates, or more accurately, by the change in expected runs to which they contribute, we can measure players offensive values.</description>
    </item>
    <item>
      <title>McElreath&#39;s Statistical Rethinking examples recoded into Stan</title>
      <link>https://ssp3nc3r.github.io/post/mcelreath-s-statistical-rethinking-examples-recoded-into-stan/</link>
      <pubDate>Tue, 09 Oct 2018 00:00:00 +0000</pubDate>
      <guid>https://ssp3nc3r.github.io/post/mcelreath-s-statistical-rethinking-examples-recoded-into-stan/</guid>
      <description>McElreath’s Statistical Rethinking is among the best books for learning Bayesian statistics (he has a second edition coming out too). As an exercise in pedagogy, I’ve recoded all his examples directly into Stan, a probabilistic programming language. Recoding examples from one programming language into another is a great way to practice learning that other language. Give it a try. I’ve made my recoded examples available here if you get stuck or want to compare methods of coding.</description>
    </item>
    <item>
      <title>Jointly modeling choice to swing with ball contact</title>
      <link>https://ssp3nc3r.github.io/post/jointly-modeling-choice-to-swing-with-ball-contact/</link>
      <pubDate>Sat, 01 Sep 2018 00:00:00 +0000</pubDate>
      <guid>https://ssp3nc3r.github.io/post/jointly-modeling-choice-to-swing-with-ball-contact/</guid>
      <description>Modeling batters’ choices to swing and abilities to contact the ball Variables informing the probability of swinging (the selection submodel) Variables informing probability of contacting the ball (the outcome submodel) Initial joint model References Modeling batters’ choices to swing and abilities to contact the ball Models for decisions to swing and ball contact are more nuanced than a model for called pitches (see Modeling Umpire Calls). Batters’ abilities to contact the ball at a given pitch location are presumably not independent of their decisions to swing.</description>
    </item>
    <item>
      <title>Stan Is Not an Acronym: Bayesian Solutions to Sabermetric Shortcomings</title>
      <link>https://ssp3nc3r.github.io/post/stan-is-not-an-acronym-bayesian-solutions-to-sabermetric-shortcomings/</link>
      <pubDate>Sun, 05 Aug 2018 00:00:00 +0000</pubDate>
      <guid>https://ssp3nc3r.github.io/post/stan-is-not-an-acronym-bayesian-solutions-to-sabermetric-shortcomings/</guid>
      <description>Here is our description of our presentation at Saberseminar 2018: “A common definition of sabermetrics is the application of statistics to baseball. However, despite clear progress over the past few decades, we argue that sabermetrics has largely ignored the most important statistical principle to baseball: generative modeling. In this talk we discuss several conceptual errors with sabermetrics that preclude optimal decision making. Each of these problems can be overcome using a principled Bayesian approach to inference, which we demonstrate using the Stan statistical software.</description>
    </item>
    <item>
      <title>Modeling Umpire Calls</title>
      <link>https://ssp3nc3r.github.io/post/modeling-umpire-calls/</link>
      <pubDate>Wed, 25 Apr 2018 00:00:00 +0000</pubDate>
      <guid>https://ssp3nc3r.github.io/post/modeling-umpire-calls/</guid>
      <description>Introduction Batting and pitching data from Major League Baseball Advance Media Modeling called strike probabilities Previous work General model description Called strike probabilities modeled in Stan Model diagnostics Called strike probability predictions from the modeled posterior Bibliography Introduction The goal of baseball pitchers — when contributing to team defense — is to put out batters. Two ways are (mostly) within the pitchers’ control. They may earn a called strike or a swinging strike.</description>
    </item>
    <item>
      <title>Run Expectancy Distributions of MLB Game States</title>
      <link>https://ssp3nc3r.github.io/post/2017-12-03-run-expectancy-distributions/</link>
      <pubDate>Sun, 03 Dec 2017 00:00:00 +0000</pubDate>
      <guid>https://ssp3nc3r.github.io/post/2017-12-03-run-expectancy-distributions/</guid>
      <description>Team wins—a chain of player events Data and sources for estimating run expectancies Calculate runs scored after every game state of a half inning Estimating run expectancy Preserving and understanding uncertainty of our estimates In half innings, more runs occur less frequently Building a bayesian run expectancy model Model summary The median run expectancy matrix Team wins—a chain of player events The performance of a baseball player includes numerous on-field (and off-field) activities, roughly divided into skills of offensive (e.</description>
    </item>
    <item>
      <title>Trading Stanton: a modeling sketch</title>
      <link>https://ssp3nc3r.github.io/post/trading-stanton-a-modeling-sketch/</link>
      <pubDate>Fri, 24 Nov 2017 00:00:00 +0000</pubDate>
      <guid>https://ssp3nc3r.github.io/post/trading-stanton-a-modeling-sketch/</guid>
      <description>Forecast of Giancarlo Stanton’s Expected Surplus Value Summary Estimate player past performance as Wins Over Replacement Forecasting WAR with a hierarchical model in Stan Dollars Per WAR on the Free-Agent Market Unadjusted surplus value Appendix: Stan Model for Forcasting WAR Forecast of Giancarlo Stanton’s Expected Surplus Value Summary In most analyses, I would normally lead with the conclusion—here, surplus value. But, as the perceived goals of analysis are evaluating, well, the analysis, I’ll start with my methods.</description>
    </item>
    <item>
      <title>Contours of batter comparisons: a trick up the sleeve</title>
      <link>https://ssp3nc3r.github.io/post/2017-08-04-contours-of-batter-comparisons/</link>
      <pubDate>Fri, 04 Aug 2017 00:00:00 +0000</pubDate>
      <guid>https://ssp3nc3r.github.io/post/2017-08-04-contours-of-batter-comparisons/</guid>
      <description>Through the eyes of writer Roger Kahn, we’ve witnessed major league pitchers working to fool batters for ages. Regarding one Brooklyn Dodgers pitcher,
“Dazzy Vance in his prime had a different trick,” [Kahn’s] father said. “For seven years he was the best strikeout pitcher in the league. Vance wore a long undershirt and he took a scissors and cut slits in the right sleeve. It ran clear down to the wrist.</description>
    </item>
  </channel>
</rss>
